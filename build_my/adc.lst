ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB130:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  29:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  30:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 2


  31:Src/adc.c     **** 
  32:Src/adc.c     **** /* ADC1 init function */
  33:Src/adc.c     **** void MX_ADC1_Init(void)
  34:Src/adc.c     **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  35:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 35 3 view .LVU1
  41              		.loc 1 35 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  36:Src/adc.c     **** 
  37:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  38:Src/adc.c     ****   */
  39:Src/adc.c     ****   hadc1.Instance = ADC1;
  47              		.loc 1 39 3 is_stmt 1 view .LVU3
  48              		.loc 1 39 18 is_stmt 0 view .LVU4
  49 000e 2348     		ldr	r0, .L11
  50 0010 234A     		ldr	r2, .L11+4
  51 0012 0260     		str	r2, [r0]
  40:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  52              		.loc 1 40 3 is_stmt 1 view .LVU5
  53              		.loc 1 40 29 is_stmt 0 view .LVU6
  54 0014 4FF48032 		mov	r2, #65536
  55 0018 4260     		str	r2, [r0, #4]
  41:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  56              		.loc 1 41 3 is_stmt 1 view .LVU7
  57              		.loc 1 41 25 is_stmt 0 view .LVU8
  58 001a 8360     		str	r3, [r0, #8]
  42:Src/adc.c     ****   hadc1.Init.ScanConvMode = ENABLE;
  59              		.loc 1 42 3 is_stmt 1 view .LVU9
  60              		.loc 1 42 27 is_stmt 0 view .LVU10
  61 001c 0122     		movs	r2, #1
  62 001e 0261     		str	r2, [r0, #16]
  43:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  63              		.loc 1 43 3 is_stmt 1 view .LVU11
  64              		.loc 1 43 33 is_stmt 0 view .LVU12
  65 0020 0376     		strb	r3, [r0, #24]
  44:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 44 3 is_stmt 1 view .LVU13
  67              		.loc 1 44 36 is_stmt 0 view .LVU14
  68 0022 80F82030 		strb	r3, [r0, #32]
  45:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  69              		.loc 1 45 3 is_stmt 1 view .LVU15
  70              		.loc 1 45 35 is_stmt 0 view .LVU16
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 3


  71 0026 4FF08051 		mov	r1, #268435456
  72 002a C162     		str	r1, [r0, #44]
  46:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO;
  73              		.loc 1 46 3 is_stmt 1 view .LVU17
  74              		.loc 1 46 31 is_stmt 0 view .LVU18
  75 002c 4FF06061 		mov	r1, #234881024
  76 0030 8162     		str	r1, [r0, #40]
  47:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  77              		.loc 1 47 3 is_stmt 1 view .LVU19
  78              		.loc 1 47 24 is_stmt 0 view .LVU20
  79 0032 C360     		str	r3, [r0, #12]
  48:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 3;
  80              		.loc 1 48 3 is_stmt 1 view .LVU21
  81              		.loc 1 48 30 is_stmt 0 view .LVU22
  82 0034 0321     		movs	r1, #3
  83 0036 C161     		str	r1, [r0, #28]
  49:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  84              		.loc 1 49 3 is_stmt 1 view .LVU23
  85              		.loc 1 49 36 is_stmt 0 view .LVU24
  86 0038 80F83020 		strb	r2, [r0, #48]
  50:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  87              		.loc 1 50 3 is_stmt 1 view .LVU25
  88              		.loc 1 50 27 is_stmt 0 view .LVU26
  89 003c 4361     		str	r3, [r0, #20]
  51:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  90              		.loc 1 51 3 is_stmt 1 view .LVU27
  91              		.loc 1 51 7 is_stmt 0 view .LVU28
  92 003e FFF7FEFF 		bl	HAL_ADC_Init
  93              	.LVL0:
  94              		.loc 1 51 6 view .LVU29
  95 0042 F8B9     		cbnz	r0, .L7
  96              	.L2:
  52:Src/adc.c     ****   {
  53:Src/adc.c     ****     Error_Handler();
  54:Src/adc.c     ****   }
  55:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  56:Src/adc.c     ****   */
  57:Src/adc.c     ****   sConfig.Channel = C_CURRENT_ADC_CHANNEL;
  97              		.loc 1 57 3 is_stmt 1 view .LVU30
  98              		.loc 1 57 19 is_stmt 0 view .LVU31
  99 0044 0B23     		movs	r3, #11
 100 0046 0093     		str	r3, [sp]
  58:Src/adc.c     ****   sConfig.Rank = 1;
 101              		.loc 1 58 3 is_stmt 1 view .LVU32
 102              		.loc 1 58 16 is_stmt 0 view .LVU33
 103 0048 0123     		movs	r3, #1
 104 004a 0193     		str	r3, [sp, #4]
  59:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 105              		.loc 1 59 3 is_stmt 1 view .LVU34
 106              		.loc 1 59 24 is_stmt 0 view .LVU35
 107 004c 0023     		movs	r3, #0
 108 004e 0293     		str	r3, [sp, #8]
  60:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 109              		.loc 1 60 3 is_stmt 1 view .LVU36
 110              		.loc 1 60 7 is_stmt 0 view .LVU37
 111 0050 6946     		mov	r1, sp
 112 0052 1248     		ldr	r0, .L11
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 4


 113 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 114              	.LVL1:
 115              		.loc 1 60 6 view .LVU38
 116 0058 B8B9     		cbnz	r0, .L8
 117              	.L3:
  61:Src/adc.c     ****   {
  62:Src/adc.c     ****     Error_Handler();
  63:Src/adc.c     ****   }
  64:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  65:Src/adc.c     ****   */
  66:Src/adc.c     ****   sConfig.Channel = A_CURRENT_ADC_CHANNEL;
 118              		.loc 1 66 3 is_stmt 1 view .LVU39
 119              		.loc 1 66 19 is_stmt 0 view .LVU40
 120 005a 0C23     		movs	r3, #12
 121 005c 0093     		str	r3, [sp]
  67:Src/adc.c     ****   sConfig.Rank = 2;
 122              		.loc 1 67 3 is_stmt 1 view .LVU41
 123              		.loc 1 67 16 is_stmt 0 view .LVU42
 124 005e 0223     		movs	r3, #2
 125 0060 0193     		str	r3, [sp, #4]
  68:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 126              		.loc 1 68 3 is_stmt 1 view .LVU43
 127              		.loc 1 68 7 is_stmt 0 view .LVU44
 128 0062 6946     		mov	r1, sp
 129 0064 0D48     		ldr	r0, .L11
 130 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL2:
 132              		.loc 1 68 6 view .LVU45
 133 006a 88B9     		cbnz	r0, .L9
 134              	.L4:
  69:Src/adc.c     ****   {
  70:Src/adc.c     ****     Error_Handler();
  71:Src/adc.c     ****   }
  72:Src/adc.c     **** 
  73:Src/adc.c     ****   sConfig.Channel = VOLOTAGE_ADC_CHANNEL;
 135              		.loc 1 73 3 is_stmt 1 view .LVU46
 136              		.loc 1 73 19 is_stmt 0 view .LVU47
 137 006c 0A23     		movs	r3, #10
 138 006e 0093     		str	r3, [sp]
  74:Src/adc.c     ****   sConfig.Rank = 3;
 139              		.loc 1 74 3 is_stmt 1 view .LVU48
 140              		.loc 1 74 16 is_stmt 0 view .LVU49
 141 0070 0323     		movs	r3, #3
 142 0072 0193     		str	r3, [sp, #4]
  75:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 143              		.loc 1 75 3 is_stmt 1 view .LVU50
 144              		.loc 1 75 7 is_stmt 0 view .LVU51
 145 0074 6946     		mov	r1, sp
 146 0076 0948     		ldr	r0, .L11
 147 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 148              	.LVL3:
 149              		.loc 1 75 6 view .LVU52
 150 007c 58B9     		cbnz	r0, .L10
 151              	.L1:
  76:Src/adc.c     ****   {
  77:Src/adc.c     ****     Error_Handler();
  78:Src/adc.c     ****   }
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 5


  79:Src/adc.c     **** 
  80:Src/adc.c     **** 
  81:Src/adc.c     **** }
 152              		.loc 1 81 1 view .LVU53
 153 007e 05B0     		add	sp, sp, #20
 154              	.LCFI2:
 155              		.cfi_remember_state
 156              		.cfi_def_cfa_offset 4
 157              		@ sp needed
 158 0080 5DF804FB 		ldr	pc, [sp], #4
 159              	.L7:
 160              	.LCFI3:
 161              		.cfi_restore_state
  53:Src/adc.c     ****   }
 162              		.loc 1 53 5 is_stmt 1 view .LVU54
 163 0084 FFF7FEFF 		bl	Error_Handler
 164              	.LVL4:
 165 0088 DCE7     		b	.L2
 166              	.L8:
  62:Src/adc.c     ****   }
 167              		.loc 1 62 5 view .LVU55
 168 008a FFF7FEFF 		bl	Error_Handler
 169              	.LVL5:
 170 008e E4E7     		b	.L3
 171              	.L9:
  70:Src/adc.c     ****   }
 172              		.loc 1 70 5 view .LVU56
 173 0090 FFF7FEFF 		bl	Error_Handler
 174              	.LVL6:
 175 0094 EAE7     		b	.L4
 176              	.L10:
  77:Src/adc.c     ****   }
 177              		.loc 1 77 5 view .LVU57
 178 0096 FFF7FEFF 		bl	Error_Handler
 179              	.LVL7:
 180              		.loc 1 81 1 is_stmt 0 view .LVU58
 181 009a F0E7     		b	.L1
 182              	.L12:
 183              		.align	2
 184              	.L11:
 185 009c 00000000 		.word	hadc1
 186 00a0 00200140 		.word	1073815552
 187              		.cfi_endproc
 188              	.LFE130:
 190              		.section	.text.MX_ADC2_Init,"ax",%progbits
 191              		.align	1
 192              		.global	MX_ADC2_Init
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	MX_ADC2_Init:
 199              	.LFB131:
  82:Src/adc.c     **** /* ADC2 init function */
  83:Src/adc.c     **** void MX_ADC2_Init(void)
  84:Src/adc.c     **** {
 200              		.loc 1 84 1 is_stmt 1 view -0
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 6


 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 16
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 00B5     		push	{lr}
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 14, -4
 208 0002 85B0     		sub	sp, sp, #20
 209              	.LCFI5:
 210              		.cfi_def_cfa_offset 24
  85:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
 211              		.loc 1 85 3 view .LVU60
 212              		.loc 1 85 26 is_stmt 0 view .LVU61
 213 0004 0023     		movs	r3, #0
 214 0006 0093     		str	r3, [sp]
 215 0008 0193     		str	r3, [sp, #4]
 216 000a 0293     		str	r3, [sp, #8]
 217 000c 0393     		str	r3, [sp, #12]
  86:Src/adc.c     **** 
  87:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  88:Src/adc.c     ****   */
  89:Src/adc.c     ****   hadc2.Instance = ADC2;
 218              		.loc 1 89 3 is_stmt 1 view .LVU62
 219              		.loc 1 89 18 is_stmt 0 view .LVU63
 220 000e 2148     		ldr	r0, .L23
 221 0010 214A     		ldr	r2, .L23+4
 222 0012 0260     		str	r2, [r0]
  90:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 223              		.loc 1 90 3 is_stmt 1 view .LVU64
 224              		.loc 1 90 29 is_stmt 0 view .LVU65
 225 0014 4FF40032 		mov	r2, #131072
 226 0018 4260     		str	r2, [r0, #4]
  91:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 227              		.loc 1 91 3 is_stmt 1 view .LVU66
 228              		.loc 1 91 25 is_stmt 0 view .LVU67
 229 001a 8360     		str	r3, [r0, #8]
  92:Src/adc.c     ****   hadc2.Init.ScanConvMode = ENABLE;
 230              		.loc 1 92 3 is_stmt 1 view .LVU68
 231              		.loc 1 92 27 is_stmt 0 view .LVU69
 232 001c 0122     		movs	r2, #1
 233 001e 0261     		str	r2, [r0, #16]
  93:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = DISABLE;
 234              		.loc 1 93 3 is_stmt 1 view .LVU70
 235              		.loc 1 93 33 is_stmt 0 view .LVU71
 236 0020 0376     		strb	r3, [r0, #24]
  94:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 237              		.loc 1 94 3 is_stmt 1 view .LVU72
 238              		.loc 1 94 36 is_stmt 0 view .LVU73
 239 0022 80F82030 		strb	r3, [r0, #32]
  95:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 240              		.loc 1 95 3 is_stmt 1 view .LVU74
 241              		.loc 1 95 35 is_stmt 0 view .LVU75
 242 0026 C362     		str	r3, [r0, #44]
  96:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 243              		.loc 1 96 3 is_stmt 1 view .LVU76
 244              		.loc 1 96 31 is_stmt 0 view .LVU77
 245 0028 1C49     		ldr	r1, .L23+8
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 7


 246 002a 8162     		str	r1, [r0, #40]
  97:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 247              		.loc 1 97 3 is_stmt 1 view .LVU78
 248              		.loc 1 97 24 is_stmt 0 view .LVU79
 249 002c C360     		str	r3, [r0, #12]
  98:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 3;
 250              		.loc 1 98 3 is_stmt 1 view .LVU80
 251              		.loc 1 98 30 is_stmt 0 view .LVU81
 252 002e 0321     		movs	r1, #3
 253 0030 C161     		str	r1, [r0, #28]
  99:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 254              		.loc 1 99 3 is_stmt 1 view .LVU82
 255              		.loc 1 99 36 is_stmt 0 view .LVU83
 256 0032 80F83020 		strb	r2, [r0, #48]
 100:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 257              		.loc 1 100 3 is_stmt 1 view .LVU84
 258              		.loc 1 100 27 is_stmt 0 view .LVU85
 259 0036 4361     		str	r3, [r0, #20]
 101:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 260              		.loc 1 101 3 is_stmt 1 view .LVU86
 261              		.loc 1 101 7 is_stmt 0 view .LVU87
 262 0038 FFF7FEFF 		bl	HAL_ADC_Init
 263              	.LVL8:
 264              		.loc 1 101 6 view .LVU88
 265 003c F0B9     		cbnz	r0, .L19
 266              	.L14:
 102:Src/adc.c     ****   {
 103:Src/adc.c     ****     Error_Handler();
 104:Src/adc.c     ****   }
 105:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 106:Src/adc.c     ****   */
 107:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_0;
 267              		.loc 1 107 3 is_stmt 1 view .LVU89
 268              		.loc 1 107 19 is_stmt 0 view .LVU90
 269 003e 0023     		movs	r3, #0
 270 0040 0093     		str	r3, [sp]
 108:Src/adc.c     ****   sConfig.Rank = 1;
 271              		.loc 1 108 3 is_stmt 1 view .LVU91
 272              		.loc 1 108 16 is_stmt 0 view .LVU92
 273 0042 0123     		movs	r3, #1
 274 0044 0193     		str	r3, [sp, #4]
 109:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 275              		.loc 1 109 3 is_stmt 1 view .LVU93
 276              		.loc 1 109 24 is_stmt 0 view .LVU94
 277 0046 0293     		str	r3, [sp, #8]
 110:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 278              		.loc 1 110 3 is_stmt 1 view .LVU95
 279              		.loc 1 110 7 is_stmt 0 view .LVU96
 280 0048 6946     		mov	r1, sp
 281 004a 1248     		ldr	r0, .L23
 282 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 283              	.LVL9:
 284              		.loc 1 110 6 view .LVU97
 285 0050 B8B9     		cbnz	r0, .L20
 286              	.L15:
 111:Src/adc.c     ****   {
 112:Src/adc.c     ****     Error_Handler();
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 8


 113:Src/adc.c     ****   }
 114:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 115:Src/adc.c     ****   */
 116:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 287              		.loc 1 116 3 is_stmt 1 view .LVU98
 288              		.loc 1 116 19 is_stmt 0 view .LVU99
 289 0052 0123     		movs	r3, #1
 290 0054 0093     		str	r3, [sp]
 117:Src/adc.c     ****   sConfig.Rank = 2;
 291              		.loc 1 117 3 is_stmt 1 view .LVU100
 292              		.loc 1 117 16 is_stmt 0 view .LVU101
 293 0056 0223     		movs	r3, #2
 294 0058 0193     		str	r3, [sp, #4]
 118:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 295              		.loc 1 118 3 is_stmt 1 view .LVU102
 296              		.loc 1 118 7 is_stmt 0 view .LVU103
 297 005a 6946     		mov	r1, sp
 298 005c 0D48     		ldr	r0, .L23
 299 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 300              	.LVL10:
 301              		.loc 1 118 6 view .LVU104
 302 0062 88B9     		cbnz	r0, .L21
 303              	.L16:
 119:Src/adc.c     ****   {
 120:Src/adc.c     ****     Error_Handler();
 121:Src/adc.c     ****   }
 122:Src/adc.c     ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 123:Src/adc.c     ****   */
 124:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 304              		.loc 1 124 3 is_stmt 1 view .LVU105
 305              		.loc 1 124 19 is_stmt 0 view .LVU106
 306 0064 0223     		movs	r3, #2
 307 0066 0093     		str	r3, [sp]
 125:Src/adc.c     ****   sConfig.Rank = 3;
 308              		.loc 1 125 3 is_stmt 1 view .LVU107
 309              		.loc 1 125 16 is_stmt 0 view .LVU108
 310 0068 0323     		movs	r3, #3
 311 006a 0193     		str	r3, [sp, #4]
 126:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 312              		.loc 1 126 3 is_stmt 1 view .LVU109
 313              		.loc 1 126 7 is_stmt 0 view .LVU110
 314 006c 6946     		mov	r1, sp
 315 006e 0948     		ldr	r0, .L23
 316 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 317              	.LVL11:
 318              		.loc 1 126 6 view .LVU111
 319 0074 58B9     		cbnz	r0, .L22
 320              	.L13:
 127:Src/adc.c     ****   {
 128:Src/adc.c     ****     Error_Handler();
 129:Src/adc.c     ****   }
 130:Src/adc.c     **** 
 131:Src/adc.c     **** }
 321              		.loc 1 131 1 view .LVU112
 322 0076 05B0     		add	sp, sp, #20
 323              	.LCFI6:
 324              		.cfi_remember_state
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 9


 325              		.cfi_def_cfa_offset 4
 326              		@ sp needed
 327 0078 5DF804FB 		ldr	pc, [sp], #4
 328              	.L19:
 329              	.LCFI7:
 330              		.cfi_restore_state
 103:Src/adc.c     ****   }
 331              		.loc 1 103 5 is_stmt 1 view .LVU113
 332 007c FFF7FEFF 		bl	Error_Handler
 333              	.LVL12:
 334 0080 DDE7     		b	.L14
 335              	.L20:
 112:Src/adc.c     ****   }
 336              		.loc 1 112 5 view .LVU114
 337 0082 FFF7FEFF 		bl	Error_Handler
 338              	.LVL13:
 339 0086 E4E7     		b	.L15
 340              	.L21:
 120:Src/adc.c     ****   }
 341              		.loc 1 120 5 view .LVU115
 342 0088 FFF7FEFF 		bl	Error_Handler
 343              	.LVL14:
 344 008c EAE7     		b	.L16
 345              	.L22:
 128:Src/adc.c     ****   }
 346              		.loc 1 128 5 view .LVU116
 347 008e FFF7FEFF 		bl	Error_Handler
 348              	.LVL15:
 349              		.loc 1 131 1 is_stmt 0 view .LVU117
 350 0092 F0E7     		b	.L13
 351              	.L24:
 352              		.align	2
 353              	.L23:
 354 0094 00000000 		.word	hadc2
 355 0098 00210140 		.word	1073815808
 356 009c 0100000F 		.word	251658241
 357              		.cfi_endproc
 358              	.LFE131:
 360              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_ADC_MspInit
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	HAL_ADC_MspInit:
 369              	.LVL16:
 370              	.LFB132:
 132:Src/adc.c     **** 
 133:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 134:Src/adc.c     **** {
 371              		.loc 1 134 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 32
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		.loc 1 134 1 is_stmt 0 view .LVU119
 376 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 10


 377              	.LCFI8:
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 4, -16
 380              		.cfi_offset 5, -12
 381              		.cfi_offset 6, -8
 382              		.cfi_offset 14, -4
 383 0002 88B0     		sub	sp, sp, #32
 384              	.LCFI9:
 385              		.cfi_def_cfa_offset 48
 386 0004 0446     		mov	r4, r0
 135:Src/adc.c     **** 
 136:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 387              		.loc 1 136 3 is_stmt 1 view .LVU120
 388              		.loc 1 136 20 is_stmt 0 view .LVU121
 389 0006 0023     		movs	r3, #0
 390 0008 0393     		str	r3, [sp, #12]
 391 000a 0493     		str	r3, [sp, #16]
 392 000c 0593     		str	r3, [sp, #20]
 393 000e 0693     		str	r3, [sp, #24]
 394 0010 0793     		str	r3, [sp, #28]
 137:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 395              		.loc 1 137 3 is_stmt 1 view .LVU122
 396              		.loc 1 137 15 is_stmt 0 view .LVU123
 397 0012 0368     		ldr	r3, [r0]
 398              		.loc 1 137 5 view .LVU124
 399 0014 454A     		ldr	r2, .L35
 400 0016 9342     		cmp	r3, r2
 401 0018 04D0     		beq	.L31
 138:Src/adc.c     ****   {
 139:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 140:Src/adc.c     **** 
 141:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 142:Src/adc.c     ****     /* ADC1 clock enable */
 143:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 144:Src/adc.c     ****   
 145:Src/adc.c     ****     //__HAL_RCC_GPIOB_CLK_ENABLE();
 146:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 147:Src/adc.c     ****     PB0     ------> ADC1_IN8
 148:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 149:Src/adc.c     ****     PC2
 150:Src/adc.c     ****     */
 151:Src/adc.c     **** 
 152:Src/adc.c     ****     GPIO_InitStruct.Pin = VOLOTAGE_ADC_GPIO_PIN;
 153:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 154:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 155:Src/adc.c     ****     HAL_GPIO_Init(VOLTAGE_ADC_GPIO_PORT, &GPIO_InitStruct);
 156:Src/adc.c     **** 
 157:Src/adc.c     ****     GPIO_InitStruct.Pin = C_CURRENT_ADC_GPIO_PIN;
 158:Src/adc.c     ****     HAL_GPIO_Init(C_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 159:Src/adc.c     **** 
 160:Src/adc.c     ****     GPIO_InitStruct.Pin = A_CURRENT_ADC_GPIO_PIN;
 161:Src/adc.c     ****     HAL_GPIO_Init(A_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 162:Src/adc.c     **** 
 163:Src/adc.c     **** /*
 164:Src/adc.c     ****     GPIO_InitStruct.Pin = BR_SO2_Pin|BR_SO1_Pin;
 165:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 166:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 11


 167:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 168:Src/adc.c     **** 
 169:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 170:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 171:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 172:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 173:Src/adc.c     **** */
 174:Src/adc.c     **** 
 175:Src/adc.c     ****     /* ADC1 DMA Init */
 176:Src/adc.c     ****     /* ADC1 Init */
 177:Src/adc.c     ****     hdma_adc1.Instance = DMA2_Stream0;
 178:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 179:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 180:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 181:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 182:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 183:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 184:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 185:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 186:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 187:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 188:Src/adc.c     ****     {
 189:Src/adc.c     ****       Error_Handler();
 190:Src/adc.c     ****     }
 191:Src/adc.c     **** 
 192:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 193:Src/adc.c     **** 
 194:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 195:Src/adc.c     **** 
 196:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 197:Src/adc.c     ****   }
 198:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 402              		.loc 1 198 8 is_stmt 1 view .LVU125
 403              		.loc 1 198 10 is_stmt 0 view .LVU126
 404 001a 454A     		ldr	r2, .L35+4
 405 001c 9342     		cmp	r3, r2
 406 001e 43D0     		beq	.L32
 407              	.LVL17:
 408              	.L25:
 199:Src/adc.c     ****   {
 200:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 201:Src/adc.c     **** 
 202:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 203:Src/adc.c     ****     /* ADC2 clock enable */
 204:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_ENABLE();
 205:Src/adc.c     ****   
 206:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 207:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 208:Src/adc.c     ****     PA0-WKUP     ------> ADC2_IN0
 209:Src/adc.c     ****     PA1     ------> ADC2_IN1
 210:Src/adc.c     ****     PA2     ------> ADC2_IN2 
 211:Src/adc.c     ****     */
 212:Src/adc.c     ****     GPIO_InitStruct.Pin = SENSE3_Pin|SENSE2_Pin|SENSE1_Pin;
 213:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 214:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 215:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 216:Src/adc.c     **** 
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 12


 217:Src/adc.c     ****     /* ADC2 DMA Init */
 218:Src/adc.c     ****     /* ADC2 Init */
 219:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Stream2;
 220:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 221:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 222:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 223:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 224:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 225:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 226:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 227:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_MEDIUM;
 228:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 229:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 230:Src/adc.c     ****     {
 231:Src/adc.c     ****       Error_Handler();
 232:Src/adc.c     ****     }
 233:Src/adc.c     **** 
 234:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
 235:Src/adc.c     **** 
 236:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 237:Src/adc.c     **** 
 238:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 239:Src/adc.c     ****   }
 240:Src/adc.c     **** }
 409              		.loc 1 240 1 view .LVU127
 410 0020 08B0     		add	sp, sp, #32
 411              	.LCFI10:
 412              		.cfi_remember_state
 413              		.cfi_def_cfa_offset 16
 414              		@ sp needed
 415 0022 70BD     		pop	{r4, r5, r6, pc}
 416              	.LVL18:
 417              	.L31:
 418              	.LCFI11:
 419              		.cfi_restore_state
 143:Src/adc.c     ****   
 420              		.loc 1 143 5 is_stmt 1 view .LVU128
 421              	.LBB2:
 143:Src/adc.c     ****   
 422              		.loc 1 143 5 view .LVU129
 423 0024 0025     		movs	r5, #0
 424 0026 0095     		str	r5, [sp]
 143:Src/adc.c     ****   
 425              		.loc 1 143 5 view .LVU130
 426 0028 424B     		ldr	r3, .L35+8
 427 002a 5A6C     		ldr	r2, [r3, #68]
 428 002c 42F48072 		orr	r2, r2, #256
 429 0030 5A64     		str	r2, [r3, #68]
 143:Src/adc.c     ****   
 430              		.loc 1 143 5 view .LVU131
 431 0032 5B6C     		ldr	r3, [r3, #68]
 432 0034 03F48073 		and	r3, r3, #256
 433 0038 0093     		str	r3, [sp]
 143:Src/adc.c     ****   
 434              		.loc 1 143 5 view .LVU132
 435 003a 009B     		ldr	r3, [sp]
 436              	.LBE2:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 13


 143:Src/adc.c     ****   
 437              		.loc 1 143 5 view .LVU133
 152:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 438              		.loc 1 152 5 view .LVU134
 152:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 439              		.loc 1 152 25 is_stmt 0 view .LVU135
 440 003c 0123     		movs	r3, #1
 441 003e 0393     		str	r3, [sp, #12]
 153:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 442              		.loc 1 153 5 is_stmt 1 view .LVU136
 153:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 443              		.loc 1 153 26 is_stmt 0 view .LVU137
 444 0040 0323     		movs	r3, #3
 445 0042 0493     		str	r3, [sp, #16]
 154:Src/adc.c     ****     HAL_GPIO_Init(VOLTAGE_ADC_GPIO_PORT, &GPIO_InitStruct);
 446              		.loc 1 154 5 is_stmt 1 view .LVU138
 154:Src/adc.c     ****     HAL_GPIO_Init(VOLTAGE_ADC_GPIO_PORT, &GPIO_InitStruct);
 447              		.loc 1 154 26 is_stmt 0 view .LVU139
 448 0044 0595     		str	r5, [sp, #20]
 155:Src/adc.c     **** 
 449              		.loc 1 155 5 is_stmt 1 view .LVU140
 450 0046 3C4E     		ldr	r6, .L35+12
 451 0048 03A9     		add	r1, sp, #12
 452 004a 3046     		mov	r0, r6
 453              	.LVL19:
 155:Src/adc.c     **** 
 454              		.loc 1 155 5 is_stmt 0 view .LVU141
 455 004c FFF7FEFF 		bl	HAL_GPIO_Init
 456              	.LVL20:
 157:Src/adc.c     ****     HAL_GPIO_Init(C_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 457              		.loc 1 157 5 is_stmt 1 view .LVU142
 157:Src/adc.c     ****     HAL_GPIO_Init(C_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 458              		.loc 1 157 25 is_stmt 0 view .LVU143
 459 0050 0223     		movs	r3, #2
 460 0052 0393     		str	r3, [sp, #12]
 158:Src/adc.c     **** 
 461              		.loc 1 158 5 is_stmt 1 view .LVU144
 462 0054 03A9     		add	r1, sp, #12
 463 0056 3046     		mov	r0, r6
 464 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 465              	.LVL21:
 160:Src/adc.c     ****     HAL_GPIO_Init(A_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 466              		.loc 1 160 5 view .LVU145
 160:Src/adc.c     ****     HAL_GPIO_Init(A_CURRENT_ADC_GPIO_PORT, &GPIO_InitStruct);
 467              		.loc 1 160 25 is_stmt 0 view .LVU146
 468 005c 0423     		movs	r3, #4
 469 005e 0393     		str	r3, [sp, #12]
 161:Src/adc.c     **** 
 470              		.loc 1 161 5 is_stmt 1 view .LVU147
 471 0060 03A9     		add	r1, sp, #12
 472 0062 3046     		mov	r0, r6
 473 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 474              	.LVL22:
 177:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 475              		.loc 1 177 5 view .LVU148
 177:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 476              		.loc 1 177 24 is_stmt 0 view .LVU149
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 14


 477 0068 3448     		ldr	r0, .L35+16
 478 006a 354B     		ldr	r3, .L35+20
 479 006c 0360     		str	r3, [r0]
 178:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 480              		.loc 1 178 5 is_stmt 1 view .LVU150
 178:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 481              		.loc 1 178 28 is_stmt 0 view .LVU151
 482 006e 4560     		str	r5, [r0, #4]
 179:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 483              		.loc 1 179 5 is_stmt 1 view .LVU152
 179:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 484              		.loc 1 179 30 is_stmt 0 view .LVU153
 485 0070 8560     		str	r5, [r0, #8]
 180:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 486              		.loc 1 180 5 is_stmt 1 view .LVU154
 180:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 487              		.loc 1 180 30 is_stmt 0 view .LVU155
 488 0072 C560     		str	r5, [r0, #12]
 181:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 489              		.loc 1 181 5 is_stmt 1 view .LVU156
 181:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 490              		.loc 1 181 27 is_stmt 0 view .LVU157
 491 0074 4FF48063 		mov	r3, #1024
 492 0078 0361     		str	r3, [r0, #16]
 182:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 493              		.loc 1 182 5 is_stmt 1 view .LVU158
 182:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 494              		.loc 1 182 40 is_stmt 0 view .LVU159
 495 007a 4FF40063 		mov	r3, #2048
 496 007e 4361     		str	r3, [r0, #20]
 183:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 497              		.loc 1 183 5 is_stmt 1 view .LVU160
 183:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 498              		.loc 1 183 37 is_stmt 0 view .LVU161
 499 0080 4FF40053 		mov	r3, #8192
 500 0084 8361     		str	r3, [r0, #24]
 184:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 501              		.loc 1 184 5 is_stmt 1 view .LVU162
 184:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 502              		.loc 1 184 25 is_stmt 0 view .LVU163
 503 0086 4FF48073 		mov	r3, #256
 504 008a C361     		str	r3, [r0, #28]
 185:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 505              		.loc 1 185 5 is_stmt 1 view .LVU164
 185:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 506              		.loc 1 185 29 is_stmt 0 view .LVU165
 507 008c 4FF40033 		mov	r3, #131072
 508 0090 0362     		str	r3, [r0, #32]
 186:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 509              		.loc 1 186 5 is_stmt 1 view .LVU166
 186:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 510              		.loc 1 186 29 is_stmt 0 view .LVU167
 511 0092 4562     		str	r5, [r0, #36]
 187:Src/adc.c     ****     {
 512              		.loc 1 187 5 is_stmt 1 view .LVU168
 187:Src/adc.c     ****     {
 513              		.loc 1 187 9 is_stmt 0 view .LVU169
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 15


 514 0094 FFF7FEFF 		bl	HAL_DMA_Init
 515              	.LVL23:
 187:Src/adc.c     ****     {
 516              		.loc 1 187 8 view .LVU170
 517 0098 18B9     		cbnz	r0, .L33
 518              	.L27:
 192:Src/adc.c     **** 
 519              		.loc 1 192 5 is_stmt 1 view .LVU171
 192:Src/adc.c     **** 
 520              		.loc 1 192 5 view .LVU172
 521 009a 284B     		ldr	r3, .L35+16
 522 009c A363     		str	r3, [r4, #56]
 192:Src/adc.c     **** 
 523              		.loc 1 192 5 view .LVU173
 524 009e 9C63     		str	r4, [r3, #56]
 192:Src/adc.c     **** 
 525              		.loc 1 192 5 view .LVU174
 526 00a0 BEE7     		b	.L25
 527              	.L33:
 189:Src/adc.c     ****     }
 528              		.loc 1 189 7 view .LVU175
 529 00a2 FFF7FEFF 		bl	Error_Handler
 530              	.LVL24:
 531 00a6 F8E7     		b	.L27
 532              	.LVL25:
 533              	.L32:
 204:Src/adc.c     ****   
 534              		.loc 1 204 5 view .LVU176
 535              	.LBB3:
 204:Src/adc.c     ****   
 536              		.loc 1 204 5 view .LVU177
 537 00a8 0025     		movs	r5, #0
 538 00aa 0195     		str	r5, [sp, #4]
 204:Src/adc.c     ****   
 539              		.loc 1 204 5 view .LVU178
 540 00ac 214B     		ldr	r3, .L35+8
 541 00ae 5A6C     		ldr	r2, [r3, #68]
 542 00b0 42F40072 		orr	r2, r2, #512
 543 00b4 5A64     		str	r2, [r3, #68]
 204:Src/adc.c     ****   
 544              		.loc 1 204 5 view .LVU179
 545 00b6 5A6C     		ldr	r2, [r3, #68]
 546 00b8 02F40072 		and	r2, r2, #512
 547 00bc 0192     		str	r2, [sp, #4]
 204:Src/adc.c     ****   
 548              		.loc 1 204 5 view .LVU180
 549 00be 019A     		ldr	r2, [sp, #4]
 550              	.LBE3:
 204:Src/adc.c     ****   
 551              		.loc 1 204 5 view .LVU181
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 552              		.loc 1 206 5 view .LVU182
 553              	.LBB4:
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 554              		.loc 1 206 5 view .LVU183
 555 00c0 0295     		str	r5, [sp, #8]
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 16


 556              		.loc 1 206 5 view .LVU184
 557 00c2 1A6B     		ldr	r2, [r3, #48]
 558 00c4 42F00102 		orr	r2, r2, #1
 559 00c8 1A63     		str	r2, [r3, #48]
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 560              		.loc 1 206 5 view .LVU185
 561 00ca 1B6B     		ldr	r3, [r3, #48]
 562 00cc 03F00103 		and	r3, r3, #1
 563 00d0 0293     		str	r3, [sp, #8]
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 564              		.loc 1 206 5 view .LVU186
 565 00d2 029B     		ldr	r3, [sp, #8]
 566              	.LBE4:
 206:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 567              		.loc 1 206 5 view .LVU187
 212:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 568              		.loc 1 212 5 view .LVU188
 212:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 569              		.loc 1 212 25 is_stmt 0 view .LVU189
 570 00d4 0723     		movs	r3, #7
 571 00d6 0393     		str	r3, [sp, #12]
 213:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 213 5 is_stmt 1 view .LVU190
 213:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 573              		.loc 1 213 26 is_stmt 0 view .LVU191
 574 00d8 0323     		movs	r3, #3
 575 00da 0493     		str	r3, [sp, #16]
 214:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 576              		.loc 1 214 5 is_stmt 1 view .LVU192
 214:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 577              		.loc 1 214 26 is_stmt 0 view .LVU193
 578 00dc 0595     		str	r5, [sp, #20]
 215:Src/adc.c     **** 
 579              		.loc 1 215 5 is_stmt 1 view .LVU194
 580 00de 03A9     		add	r1, sp, #12
 581 00e0 1848     		ldr	r0, .L35+24
 582              	.LVL26:
 215:Src/adc.c     **** 
 583              		.loc 1 215 5 is_stmt 0 view .LVU195
 584 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 585              	.LVL27:
 219:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 586              		.loc 1 219 5 is_stmt 1 view .LVU196
 219:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 587              		.loc 1 219 24 is_stmt 0 view .LVU197
 588 00e6 1848     		ldr	r0, .L35+28
 589 00e8 184B     		ldr	r3, .L35+32
 590 00ea 0360     		str	r3, [r0]
 220:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 591              		.loc 1 220 5 is_stmt 1 view .LVU198
 220:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 592              		.loc 1 220 28 is_stmt 0 view .LVU199
 593 00ec 4FF00073 		mov	r3, #33554432
 594 00f0 4360     		str	r3, [r0, #4]
 221:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 595              		.loc 1 221 5 is_stmt 1 view .LVU200
 221:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 17


 596              		.loc 1 221 30 is_stmt 0 view .LVU201
 597 00f2 8560     		str	r5, [r0, #8]
 222:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 598              		.loc 1 222 5 is_stmt 1 view .LVU202
 222:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 599              		.loc 1 222 30 is_stmt 0 view .LVU203
 600 00f4 C560     		str	r5, [r0, #12]
 223:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 601              		.loc 1 223 5 is_stmt 1 view .LVU204
 223:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 602              		.loc 1 223 27 is_stmt 0 view .LVU205
 603 00f6 4FF48063 		mov	r3, #1024
 604 00fa 0361     		str	r3, [r0, #16]
 224:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 605              		.loc 1 224 5 is_stmt 1 view .LVU206
 224:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 606              		.loc 1 224 40 is_stmt 0 view .LVU207
 607 00fc 4FF40063 		mov	r3, #2048
 608 0100 4361     		str	r3, [r0, #20]
 225:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 609              		.loc 1 225 5 is_stmt 1 view .LVU208
 225:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 610              		.loc 1 225 37 is_stmt 0 view .LVU209
 611 0102 4FF40053 		mov	r3, #8192
 612 0106 8361     		str	r3, [r0, #24]
 226:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_MEDIUM;
 613              		.loc 1 226 5 is_stmt 1 view .LVU210
 226:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_MEDIUM;
 614              		.loc 1 226 25 is_stmt 0 view .LVU211
 615 0108 4FF48073 		mov	r3, #256
 616 010c C361     		str	r3, [r0, #28]
 227:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 617              		.loc 1 227 5 is_stmt 1 view .LVU212
 227:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 618              		.loc 1 227 29 is_stmt 0 view .LVU213
 619 010e 4FF48033 		mov	r3, #65536
 620 0112 0362     		str	r3, [r0, #32]
 228:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 621              		.loc 1 228 5 is_stmt 1 view .LVU214
 228:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 622              		.loc 1 228 29 is_stmt 0 view .LVU215
 623 0114 4562     		str	r5, [r0, #36]
 229:Src/adc.c     ****     {
 624              		.loc 1 229 5 is_stmt 1 view .LVU216
 229:Src/adc.c     ****     {
 625              		.loc 1 229 9 is_stmt 0 view .LVU217
 626 0116 FFF7FEFF 		bl	HAL_DMA_Init
 627              	.LVL28:
 229:Src/adc.c     ****     {
 628              		.loc 1 229 8 view .LVU218
 629 011a 18B9     		cbnz	r0, .L34
 630              	.L29:
 234:Src/adc.c     **** 
 631              		.loc 1 234 5 is_stmt 1 view .LVU219
 234:Src/adc.c     **** 
 632              		.loc 1 234 5 view .LVU220
 633 011c 0A4B     		ldr	r3, .L35+28
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 18


 634 011e A363     		str	r3, [r4, #56]
 234:Src/adc.c     **** 
 635              		.loc 1 234 5 view .LVU221
 636 0120 9C63     		str	r4, [r3, #56]
 234:Src/adc.c     **** 
 637              		.loc 1 234 5 view .LVU222
 638              		.loc 1 240 1 is_stmt 0 view .LVU223
 639 0122 7DE7     		b	.L25
 640              	.L34:
 231:Src/adc.c     ****     }
 641              		.loc 1 231 7 is_stmt 1 view .LVU224
 642 0124 FFF7FEFF 		bl	Error_Handler
 643              	.LVL29:
 644 0128 F8E7     		b	.L29
 645              	.L36:
 646 012a 00BF     		.align	2
 647              	.L35:
 648 012c 00200140 		.word	1073815552
 649 0130 00210140 		.word	1073815808
 650 0134 00380240 		.word	1073887232
 651 0138 00080240 		.word	1073874944
 652 013c 00000000 		.word	hdma_adc1
 653 0140 10640240 		.word	1073898512
 654 0144 00000240 		.word	1073872896
 655 0148 00000000 		.word	hdma_adc2
 656 014c 40640240 		.word	1073898560
 657              		.cfi_endproc
 658              	.LFE132:
 660              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 661              		.align	1
 662              		.global	HAL_ADC_MspDeInit
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	HAL_ADC_MspDeInit:
 669              	.LVL30:
 670              	.LFB133:
 241:Src/adc.c     **** 
 242:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 243:Src/adc.c     **** {
 671              		.loc 1 243 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		.loc 1 243 1 is_stmt 0 view .LVU226
 676 0000 10B5     		push	{r4, lr}
 677              	.LCFI12:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 4, -8
 680              		.cfi_offset 14, -4
 681 0002 0446     		mov	r4, r0
 244:Src/adc.c     **** 
 245:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 682              		.loc 1 245 3 is_stmt 1 view .LVU227
 683              		.loc 1 245 15 is_stmt 0 view .LVU228
 684 0004 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 19


 685              		.loc 1 245 5 view .LVU229
 686 0006 114A     		ldr	r2, .L43
 687 0008 9342     		cmp	r3, r2
 688 000a 03D0     		beq	.L41
 246:Src/adc.c     ****   {
 247:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 248:Src/adc.c     **** 
 249:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 250:Src/adc.c     ****     /* Peripheral clock disable */
 251:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 252:Src/adc.c     ****   
 253:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 254:Src/adc.c     ****     PB0     ------> ADC1_IN8
 255:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 256:Src/adc.c     ****     */
 257:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, BR_SO2_Pin|BR_SO1_Pin);
 258:Src/adc.c     **** 
 259:Src/adc.c     ****     /* ADC1 DMA DeInit */
 260:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 261:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 262:Src/adc.c     **** 
 263:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 264:Src/adc.c     ****   }
 265:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 689              		.loc 1 265 8 is_stmt 1 view .LVU230
 690              		.loc 1 265 10 is_stmt 0 view .LVU231
 691 000c 104A     		ldr	r2, .L43+4
 692 000e 9342     		cmp	r3, r2
 693 0010 0ED0     		beq	.L42
 694              	.LVL31:
 695              	.L37:
 266:Src/adc.c     ****   {
 267:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 268:Src/adc.c     **** 
 269:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 270:Src/adc.c     ****     /* Peripheral clock disable */
 271:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_DISABLE();
 272:Src/adc.c     ****   
 273:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 274:Src/adc.c     ****     PA0-WKUP     ------> ADC2_IN0
 275:Src/adc.c     ****     PA1     ------> ADC2_IN1
 276:Src/adc.c     ****     PA2     ------> ADC2_IN2 
 277:Src/adc.c     ****     */
 278:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, SENSE3_Pin|SENSE2_Pin|SENSE1_Pin);
 279:Src/adc.c     **** 
 280:Src/adc.c     ****     /* ADC2 DMA DeInit */
 281:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 282:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 283:Src/adc.c     **** 
 284:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 285:Src/adc.c     ****   }
 286:Src/adc.c     **** } 
 696              		.loc 1 286 1 view .LVU232
 697 0012 10BD     		pop	{r4, pc}
 698              	.LVL32:
 699              	.L41:
 251:Src/adc.c     ****   
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 20


 700              		.loc 1 251 5 is_stmt 1 view .LVU233
 701 0014 02F58C32 		add	r2, r2, #71680
 702 0018 536C     		ldr	r3, [r2, #68]
 703 001a 23F48073 		bic	r3, r3, #256
 704 001e 5364     		str	r3, [r2, #68]
 257:Src/adc.c     **** 
 705              		.loc 1 257 5 view .LVU234
 706 0020 0321     		movs	r1, #3
 707 0022 0C48     		ldr	r0, .L43+8
 708              	.LVL33:
 257:Src/adc.c     **** 
 709              		.loc 1 257 5 is_stmt 0 view .LVU235
 710 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 711              	.LVL34:
 260:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 712              		.loc 1 260 5 is_stmt 1 view .LVU236
 713 0028 A06B     		ldr	r0, [r4, #56]
 714 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 715              	.LVL35:
 716 002e F0E7     		b	.L37
 717              	.LVL36:
 718              	.L42:
 271:Src/adc.c     ****   
 719              		.loc 1 271 5 view .LVU237
 720 0030 094A     		ldr	r2, .L43+12
 721 0032 536C     		ldr	r3, [r2, #68]
 722 0034 23F40073 		bic	r3, r3, #512
 723 0038 5364     		str	r3, [r2, #68]
 278:Src/adc.c     **** 
 724              		.loc 1 278 5 view .LVU238
 725 003a 0721     		movs	r1, #7
 726 003c 0748     		ldr	r0, .L43+16
 727              	.LVL37:
 278:Src/adc.c     **** 
 728              		.loc 1 278 5 is_stmt 0 view .LVU239
 729 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 730              	.LVL38:
 281:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 731              		.loc 1 281 5 is_stmt 1 view .LVU240
 732 0042 A06B     		ldr	r0, [r4, #56]
 733 0044 FFF7FEFF 		bl	HAL_DMA_DeInit
 734              	.LVL39:
 735              		.loc 1 286 1 is_stmt 0 view .LVU241
 736 0048 E3E7     		b	.L37
 737              	.L44:
 738 004a 00BF     		.align	2
 739              	.L43:
 740 004c 00200140 		.word	1073815552
 741 0050 00210140 		.word	1073815808
 742 0054 00040240 		.word	1073873920
 743 0058 00380240 		.word	1073887232
 744 005c 00000240 		.word	1073872896
 745              		.cfi_endproc
 746              	.LFE133:
 748              		.comm	hdma_adc2,96,4
 749              		.comm	hdma_adc1,96,4
 750              		.comm	hadc2,72,4
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 21


 751              		.comm	hadc1,72,4
 752              		.text
 753              	.Letext0:
 754              		.file 2 "c:\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 755              		.file 3 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 756              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 757              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 758              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 759              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 760              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 761              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 762              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 763              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 764              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 765              		.file 13 "Inc/adc.h"
 766              		.file 14 "Inc/main.h"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:26     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:185    .text.MX_ADC1_Init:0000009c $d
                            *COM*:00000048 hadc1
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:191    .text.MX_ADC2_Init:00000000 $t
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:198    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:354    .text.MX_ADC2_Init:00000094 $d
                            *COM*:00000048 hadc2
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:361    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:368    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:648    .text.HAL_ADC_MspInit:0000012c $d
                            *COM*:00000060 hdma_adc1
                            *COM*:00000060 hdma_adc2
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:661    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:668    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\ncer\AppData\Local\Temp\cc2N1ArP.s:740    .text.HAL_ADC_MspDeInit:0000004c $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
