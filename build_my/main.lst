ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB134:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "can.h"
  25:Src/main.c    **** #include "dma.h"
  26:Src/main.c    **** #include "spi.h"
  27:Src/main.c    **** #include "tim.h"
  28:Src/main.c    **** #include "usart.h"
  29:Src/main.c    **** #include "usb_otg.h"
  30:Src/main.c    **** #include "gpio.h"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN Includes */
  34:Src/main.c    **** #include "uart_ext.h"
  35:Src/main.c    **** #include "encoder.h"
  36:Src/main.c    **** #include "as5047.h"
  37:Src/main.c    **** #include "foc.h"
  38:Src/main.c    **** #include "parameter.h"
  39:Src/main.c    **** #include "dac.h"
  40:Src/main.c    **** #include "utils.h"
  41:Src/main.c    **** 
  42:Src/main.c    **** #ifdef USE_GYRO
  43:Src/main.c    **** #include "soft_i2c.h"
  44:Src/main.c    **** #include "icm20600.h"
  45:Src/main.c    **** #include "easy_angle.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** void Angle_Control();
  48:Src/main.c    **** #endif
  49:Src/main.c    **** //#include "sing.h"
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN PTD */
  54:Src/main.c    **** extern uint32_t cnt;
  55:Src/main.c    **** extern const uint8_t voice[];
  56:Src/main.c    **** uint8_t Init_OK=0;
  57:Src/main.c    **** uint8_t Ms_5_Flag=0;
  58:Src/main.c    **** void Angle_Handler();
  59:Src/main.c    **** /* USER CODE END PTD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PD */
  63:Src/main.c    **** /* USER CODE END PD */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PM */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN PV */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END PV */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** void SystemClock_Config(void);
  78:Src/main.c    **** /* USER CODE BEGIN PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  83:Src/main.c    **** /* USER CODE BEGIN 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE END 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /**
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 3


  88:Src/main.c    ****   * @brief  The application entry point.
  89:Src/main.c    ****   * @retval int
  90:Src/main.c    ****   */
  91:Src/main.c    **** int main(void)
  92:Src/main.c    **** {
  93:Src/main.c    ****   /* USER CODE BEGIN 1 */
  94:Src/main.c    ****   uint16_t adc_value[2]={0};
  95:Src/main.c    ****   /* USER CODE END 1 */
  96:Src/main.c    ****   
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Src/main.c    ****   HAL_Init();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END Init */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Configure the system clock */
 108:Src/main.c    ****   SystemClock_Config();
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE END SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Initialize all configured peripherals */
 115:Src/main.c    ****   MX_DMA_Init();
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_ADC1_Init();
 118:Src/main.c    ****   MX_ADC2_Init();
 119:Src/main.c    **** #ifdef DAC_AS_VREF
 120:Src/main.c    ****   MX_DAC_Init();
 121:Src/main.c    **** #endif
 122:Src/main.c    ****   MX_TIM1_Init();
 123:Src/main.c    ****   MX_TIM8_Init();
 124:Src/main.c    ****   MX_UART5_Init();
 125:Src/main.c    **** 
 126:Src/main.c    ****   MX_TIM6_Init();
 127:Src/main.c    ****   MX_TIM7_Init();
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 129:Src/main.c    ****   debug_uart_init(&huart5,DMA,DMA);
 130:Src/main.c    ****   uprintf_polling("hello,world!\r\n");
 131:Src/main.c    ****   Read_Parameters(1);
 132:Src/main.c    **** 
 133:Src/main.c    ****   #ifdef ENCODER_SOFT_SPI
 134:Src/main.c    ****   As5047_Init(0,ENCODER_CSN_GPIO_Port,ENCODER_CSN_Pin);
 135:Src/main.c    ****   #else
 136:Src/main.c    ****   MX_SPI3_Init();
 137:Src/main.c    ****   As5047_Init(&hspi3,ENCODER_CSN_GPIO_Port,ENCODER_CSN_Pin); 
 138:Src/main.c    ****   #endif
 139:Src/main.c    ****   Foc_Init();
 140:Src/main.c    **** 
 141:Src/main.c    **** 
 142:Src/main.c    ****   #ifdef USE_GYRO
 143:Src/main.c    ****   Soft_I2C_Init(SOFT_I2C_SCL_PORT,SOFT_I2C_SCL_PIN,SOFT_I2C_SDA_PORT,SOFT_I2C_SDA_PIN);
 144:Src/main.c    ****   MPU9250_Init(&MPU9250); 
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 4


 145:Src/main.c    ****   #endif
 146:Src/main.c    **** 
 147:Src/main.c    ****   //Song_Init(&htim7,5000,0.3f,voice,297973);
 148:Src/main.c    **** 
 149:Src/main.c    ****   uprintf_polling("hello,world2!\r\n");
 150:Src/main.c    ****   Init_OK=1;
 151:Src/main.c    **** 
 152:Src/main.c    ****   //
 153:Src/main.c    **** 
 154:Src/main.c    ****   //;
 155:Src/main.c    ****   /* USER CODE END 2 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* Infinite loop */
 158:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 159:Src/main.c    ****   while (1)
 160:Src/main.c    ****   {
 161:Src/main.c    ****     /* USER CODE END WHILE */
 162:Src/main.c    ****     if(buffer_rx_OK){
 163:Src/main.c    ****       UART_Command_Analize_And_Call();
 164:Src/main.c    ****     }
 165:Src/main.c    ****     
 166:Src/main.c    **** #ifdef USE_GYRO
 167:Src/main.c    ****     if(Ms_5_Flag){
 168:Src/main.c    ****       Ms_5_Flag=0;
 169:Src/main.c    ****       Angle_Handler(); 
 170:Src/main.c    ****       Angle_Control();
 171:Src/main.c    ****     }
 172:Src/main.c    **** #endif
 173:Src/main.c    ****     /* USER CODE BEGIN 3 */
 174:Src/main.c    ****   }
 175:Src/main.c    ****   /* USER CODE END 3 */
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /**
 179:Src/main.c    ****   * @brief System Clock Configuration
 180:Src/main.c    ****   * @retval None
 181:Src/main.c    ****   */
 182:Src/main.c    **** void SystemClock_Config(void)
 183:Src/main.c    **** {
  29              		.loc 1 183 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 184 3 view .LVU1
  43              		.loc 1 184 22 is_stmt 0 view .LVU2
  44 0004 3022     		movs	r2, #48
  45 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 5


  46 0008 08A8     		add	r0, sp, #32
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 185 3 is_stmt 1 view .LVU3
  50              		.loc 1 185 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0394     		str	r4, [sp, #12]
  53 0012 0494     		str	r4, [sp, #16]
  54 0014 0594     		str	r4, [sp, #20]
  55 0016 0694     		str	r4, [sp, #24]
  56 0018 0794     		str	r4, [sp, #28]
 186:Src/main.c    **** 
 187:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 188:Src/main.c    ****   */
 189:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 189 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 189 3 view .LVU6
  60 001a 0194     		str	r4, [sp, #4]
  61              		.loc 1 189 3 view .LVU7
  62 001c 1C4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 189 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0193     		str	r3, [sp, #4]
  70              		.loc 1 189 3 view .LVU9
  71 002e 019B     		ldr	r3, [sp, #4]
  72              	.LBE2:
  73              		.loc 1 189 3 view .LVU10
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 190 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 190 3 view .LVU12
  77 0030 0294     		str	r4, [sp, #8]
  78              		.loc 1 190 3 view .LVU13
  79 0032 184B     		ldr	r3, .L3+4
  80 0034 1A68     		ldr	r2, [r3]
  81 0036 42F48042 		orr	r2, r2, #16384
  82 003a 1A60     		str	r2, [r3]
  83              		.loc 1 190 3 view .LVU14
  84 003c 1B68     		ldr	r3, [r3]
  85 003e 03F48043 		and	r3, r3, #16384
  86 0042 0293     		str	r3, [sp, #8]
  87              		.loc 1 190 3 view .LVU15
  88 0044 029B     		ldr	r3, [sp, #8]
  89              	.LBE3:
  90              		.loc 1 190 3 view .LVU16
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 192:Src/main.c    ****   */
 193:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  91              		.loc 1 193 3 view .LVU17
  92              		.loc 1 193 36 is_stmt 0 view .LVU18
  93 0046 0123     		movs	r3, #1
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 6


  94 0048 0893     		str	r3, [sp, #32]
 194:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  95              		.loc 1 194 3 is_stmt 1 view .LVU19
  96              		.loc 1 194 30 is_stmt 0 view .LVU20
  97 004a 4FF48033 		mov	r3, #65536
  98 004e 0993     		str	r3, [sp, #36]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  99              		.loc 1 195 3 is_stmt 1 view .LVU21
 100              		.loc 1 195 34 is_stmt 0 view .LVU22
 101 0050 0225     		movs	r5, #2
 102 0052 0E95     		str	r5, [sp, #56]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 196 3 is_stmt 1 view .LVU23
 104              		.loc 1 196 35 is_stmt 0 view .LVU24
 105 0054 4FF48003 		mov	r3, #4194304
 106 0058 0F93     		str	r3, [sp, #60]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 107              		.loc 1 197 3 is_stmt 1 view .LVU25
 108              		.loc 1 197 30 is_stmt 0 view .LVU26
 109 005a 0423     		movs	r3, #4
 110 005c 1093     		str	r3, [sp, #64]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 111              		.loc 1 198 3 is_stmt 1 view .LVU27
 112              		.loc 1 198 30 is_stmt 0 view .LVU28
 113 005e A823     		movs	r3, #168
 114 0060 1193     		str	r3, [sp, #68]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 199 3 is_stmt 1 view .LVU29
 116              		.loc 1 199 30 is_stmt 0 view .LVU30
 117 0062 1295     		str	r5, [sp, #72]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 118              		.loc 1 200 3 is_stmt 1 view .LVU31
 119              		.loc 1 200 30 is_stmt 0 view .LVU32
 120 0064 0723     		movs	r3, #7
 121 0066 1393     		str	r3, [sp, #76]
 201:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122              		.loc 1 201 3 is_stmt 1 view .LVU33
 123              		.loc 1 201 7 is_stmt 0 view .LVU34
 124 0068 08A8     		add	r0, sp, #32
 125 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL1:
 202:Src/main.c    ****   {
 203:Src/main.c    ****     Error_Handler();
 204:Src/main.c    ****   }
 205:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 206:Src/main.c    ****   */
 207:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 127              		.loc 1 207 3 is_stmt 1 view .LVU35
 128              		.loc 1 207 31 is_stmt 0 view .LVU36
 129 006e 0F23     		movs	r3, #15
 130 0070 0393     		str	r3, [sp, #12]
 208:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 209:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 131              		.loc 1 209 3 is_stmt 1 view .LVU37
 132              		.loc 1 209 34 is_stmt 0 view .LVU38
 133 0072 0495     		str	r5, [sp, #16]
 210:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 7


 134              		.loc 1 210 3 is_stmt 1 view .LVU39
 135              		.loc 1 210 35 is_stmt 0 view .LVU40
 136 0074 0594     		str	r4, [sp, #20]
 211:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 137              		.loc 1 211 3 is_stmt 1 view .LVU41
 138              		.loc 1 211 36 is_stmt 0 view .LVU42
 139 0076 4FF4A053 		mov	r3, #5120
 140 007a 0693     		str	r3, [sp, #24]
 212:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 141              		.loc 1 212 3 is_stmt 1 view .LVU43
 142              		.loc 1 212 36 is_stmt 0 view .LVU44
 143 007c 4FF48053 		mov	r3, #4096
 144 0080 0793     		str	r3, [sp, #28]
 213:Src/main.c    **** 
 214:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 145              		.loc 1 214 3 is_stmt 1 view .LVU45
 146              		.loc 1 214 7 is_stmt 0 view .LVU46
 147 0082 0521     		movs	r1, #5
 148 0084 03A8     		add	r0, sp, #12
 149 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 150              	.LVL2:
 215:Src/main.c    ****   {
 216:Src/main.c    ****     Error_Handler();
 217:Src/main.c    ****   }
 218:Src/main.c    **** }
 151              		.loc 1 218 1 view .LVU47
 152 008a 15B0     		add	sp, sp, #84
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 008c 30BD     		pop	{r4, r5, pc}
 157              	.L4:
 158 008e 00BF     		.align	2
 159              	.L3:
 160 0090 00380240 		.word	1073887232
 161 0094 00700040 		.word	1073770496
 162              		.cfi_endproc
 163              	.LFE134:
 165              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 166              		.align	2
 167              	.LC0:
 168 0000 68656C6C 		.ascii	"hello,world!\015\012\000"
 168      6F2C776F 
 168      726C6421 
 168      0D0A00
 169 000f 00       		.align	2
 170              	.LC1:
 171 0010 68656C6C 		.ascii	"hello,world2!\015\012\000"
 171      6F2C776F 
 171      726C6432 
 171      210D0A00 
 172              		.section	.text.main,"ax",%progbits
 173              		.align	1
 174              		.global	main
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 8


 178              		.fpu fpv4-sp-d16
 180              	main:
 181              	.LFB133:
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
 182              		.loc 1 92 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
  94:Src/main.c    ****   /* USER CODE END 1 */
 192              		.loc 1 94 3 view .LVU49
 101:Src/main.c    **** 
 193              		.loc 1 101 3 view .LVU50
 194 0002 FFF7FEFF 		bl	HAL_Init
 195              	.LVL3:
 108:Src/main.c    **** 
 196              		.loc 1 108 3 view .LVU51
 197 0006 FFF7FEFF 		bl	SystemClock_Config
 198              	.LVL4:
 115:Src/main.c    ****   MX_GPIO_Init();
 199              		.loc 1 115 3 view .LVU52
 200 000a FFF7FEFF 		bl	MX_DMA_Init
 201              	.LVL5:
 116:Src/main.c    ****   MX_ADC1_Init();
 202              		.loc 1 116 3 view .LVU53
 203 000e FFF7FEFF 		bl	MX_GPIO_Init
 204              	.LVL6:
 117:Src/main.c    ****   MX_ADC2_Init();
 205              		.loc 1 117 3 view .LVU54
 206 0012 FFF7FEFF 		bl	MX_ADC1_Init
 207              	.LVL7:
 118:Src/main.c    **** #ifdef DAC_AS_VREF
 208              		.loc 1 118 3 view .LVU55
 209 0016 FFF7FEFF 		bl	MX_ADC2_Init
 210              	.LVL8:
 120:Src/main.c    **** #endif
 211              		.loc 1 120 3 view .LVU56
 212 001a FFF7FEFF 		bl	MX_DAC_Init
 213              	.LVL9:
 122:Src/main.c    ****   MX_TIM8_Init();
 214              		.loc 1 122 3 view .LVU57
 215 001e FFF7FEFF 		bl	MX_TIM1_Init
 216              	.LVL10:
 123:Src/main.c    ****   MX_UART5_Init();
 217              		.loc 1 123 3 view .LVU58
 218 0022 FFF7FEFF 		bl	MX_TIM8_Init
 219              	.LVL11:
 124:Src/main.c    **** 
 220              		.loc 1 124 3 view .LVU59
 221 0026 FFF7FEFF 		bl	MX_UART5_Init
 222              	.LVL12:
 126:Src/main.c    ****   MX_TIM7_Init();
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 9


 223              		.loc 1 126 3 view .LVU60
 224 002a FFF7FEFF 		bl	MX_TIM6_Init
 225              	.LVL13:
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 226              		.loc 1 127 3 view .LVU61
 227 002e FFF7FEFF 		bl	MX_TIM7_Init
 228              	.LVL14:
 129:Src/main.c    ****   uprintf_polling("hello,world!\r\n");
 229              		.loc 1 129 3 view .LVU62
 230 0032 0222     		movs	r2, #2
 231 0034 1146     		mov	r1, r2
 232 0036 1048     		ldr	r0, .L10
 233 0038 FFF7FEFF 		bl	debug_uart_init
 234              	.LVL15:
 130:Src/main.c    ****   Read_Parameters(1);
 235              		.loc 1 130 3 view .LVU63
 236 003c 0F48     		ldr	r0, .L10+4
 237 003e FFF7FEFF 		bl	uprintf_polling
 238              	.LVL16:
 131:Src/main.c    **** 
 239              		.loc 1 131 3 view .LVU64
 240 0042 0120     		movs	r0, #1
 241 0044 FFF7FEFF 		bl	Read_Parameters
 242              	.LVL17:
 136:Src/main.c    ****   As5047_Init(&hspi3,ENCODER_CSN_GPIO_Port,ENCODER_CSN_Pin); 
 243              		.loc 1 136 3 view .LVU65
 244 0048 FFF7FEFF 		bl	MX_SPI3_Init
 245              	.LVL18:
 137:Src/main.c    ****   #endif
 246              		.loc 1 137 3 view .LVU66
 247 004c 4022     		movs	r2, #64
 248 004e 0C49     		ldr	r1, .L10+8
 249 0050 0C48     		ldr	r0, .L10+12
 250 0052 FFF7FEFF 		bl	As5047_Init
 251              	.LVL19:
 139:Src/main.c    **** 
 252              		.loc 1 139 3 view .LVU67
 253 0056 FFF7FEFF 		bl	Foc_Init
 254              	.LVL20:
 149:Src/main.c    ****   Init_OK=1;
 255              		.loc 1 149 3 view .LVU68
 256 005a 0B48     		ldr	r0, .L10+16
 257 005c FFF7FEFF 		bl	uprintf_polling
 258              	.LVL21:
 150:Src/main.c    **** 
 259              		.loc 1 150 3 view .LVU69
 150:Src/main.c    **** 
 260              		.loc 1 150 10 is_stmt 0 view .LVU70
 261 0060 0A4B     		ldr	r3, .L10+20
 262 0062 0122     		movs	r2, #1
 263 0064 1A70     		strb	r2, [r3]
 264 0066 01E0     		b	.L6
 265              	.L9:
 163:Src/main.c    ****     }
 266              		.loc 1 163 7 is_stmt 1 view .LVU71
 267 0068 FFF7FEFF 		bl	UART_Command_Analize_And_Call
 268              	.LVL22:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 10


 269              	.L6:
 159:Src/main.c    ****   {
 270              		.loc 1 159 3 view .LVU72
 162:Src/main.c    ****       UART_Command_Analize_And_Call();
 271              		.loc 1 162 5 view .LVU73
 162:Src/main.c    ****       UART_Command_Analize_And_Call();
 272              		.loc 1 162 8 is_stmt 0 view .LVU74
 273 006c 084B     		ldr	r3, .L10+24
 274 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 162:Src/main.c    ****       UART_Command_Analize_And_Call();
 275              		.loc 1 162 7 view .LVU75
 276 0070 002B     		cmp	r3, #0
 277 0072 FBD0     		beq	.L6
 278 0074 F8E7     		b	.L9
 279              	.L11:
 280 0076 00BF     		.align	2
 281              	.L10:
 282 0078 00000000 		.word	huart5
 283 007c 00000000 		.word	.LC0
 284 0080 00040240 		.word	1073873920
 285 0084 00000000 		.word	hspi3
 286 0088 10000000 		.word	.LC1
 287 008c 00000000 		.word	.LANCHOR0
 288 0090 00000000 		.word	buffer_rx_OK
 289              		.cfi_endproc
 290              	.LFE133:
 292              		.section	.text.Error_Handler,"ax",%progbits
 293              		.align	1
 294              		.global	Error_Handler
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	Error_Handler:
 301              	.LFB135:
 219:Src/main.c    **** 
 220:Src/main.c    **** /* USER CODE BEGIN 4 */
 221:Src/main.c    **** #ifdef USE_GYRO
 222:Src/main.c    **** #include "math.h"
 223:Src/main.c    **** void Ms_Handler(){
 224:Src/main.c    ****   static uint32_t ms_cnt;
 225:Src/main.c    **** 
 226:Src/main.c    ****   if(!Init_OK){
 227:Src/main.c    ****     return ;
 228:Src/main.c    ****   }
 229:Src/main.c    **** 
 230:Src/main.c    ****   ms_cnt++;
 231:Src/main.c    ****   if(ms_cnt%5==0){
 232:Src/main.c    ****     Ms_5_Flag=1;
 233:Src/main.c    ****   }
 234:Src/main.c    **** 
 235:Src/main.c    ****   if(ms_cnt==50000){
 236:Src/main.c    ****     ms_cnt=0;
 237:Src/main.c    ****   }
 238:Src/main.c    **** }
 239:Src/main.c    **** 
 240:Src/main.c    **** float angle[3]={0};
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 11


 241:Src/main.c    **** void Angle_Handler(){
 242:Src/main.c    ****   int16_t gy[3],ac[3];
 243:Src/main.c    ****   float angle_speed[3];
 244:Src/main.c    ****   float ac_angle[3];
 245:Src/main.c    ****   MPU_Read6500(&MPU9250,ac,gy);
 246:Src/main.c    ****   Gyroraw_to_Angle_Speed(&MPU9250,gy,angle_speed);
 247:Src/main.c    ****   get_angle(ac,angle_speed,angle,ac_angle);
 248:Src/main.c    ****   //send_wave(angle[0],angle[1],angle[2],ac_angle[1]);
 249:Src/main.c    **** }
 250:Src/main.c    **** 
 251:Src/main.c    **** PID_S Angle_PID ={
 252:Src/main.c    ****     .KP=0.02,
 253:Src/main.c    ****     .KD=0,
 254:Src/main.c    ****     .KI=0,
 255:Src/main.c    ****     .I_TIME=0.005f,
 256:Src/main.c    ****     .i_max = __FLT_MAX__,
 257:Src/main.c    ****     .I_ERR_LIMIT = 5.0f
 258:Src/main.c    **** };
 259:Src/main.c    **** // angle[1] 往前低头>90
 260:Src/main.c    **** 
 261:Src/main.c    **** // phi = 0 时，力矩向前低头
 262:Src/main.c    **** float Target_Angle=90;
 263:Src/main.c    **** void Angle_Control(){
 264:Src/main.c    ****   float out=0;
 265:Src/main.c    ****   float abs_out=0;
 266:Src/main.c    ****   out=PID_Control(&Angle_PID,Target_Angle,angle[1]);
 267:Src/main.c    ****   // 当往前低头，angle[1]=120
 268:Src/main.c    ****   // 此时 target - now 为 负数
 269:Src/main.c    ****   // PID值为正数
 270:Src/main.c    ****   // 则out = 负数
 271:Src/main.c    ****   if(out>0){
 272:Src/main.c    ****     Phi = 0;
 273:Src/main.c    ****   }else{
 274:Src/main.c    ****     Phi = 180;
 275:Src/main.c    ****   }
 276:Src/main.c    ****   abs_out=fabsf(out);
 277:Src/main.c    ****   if(abs_out>0.5f){
 278:Src/main.c    ****     abs_out=0.5f;
 279:Src/main.c    ****   }
 280:Src/main.c    ****   Duty_Amp =Base_Duty* abs_out;
 281:Src/main.c    ****   if(Wave_Flag)
 282:Src/main.c    ****     send_wave(angle[1],0,Duty_Amp*1000,0);
 283:Src/main.c    **** }
 284:Src/main.c    **** #endif
 285:Src/main.c    **** 
 286:Src/main.c    **** /* USER CODE END 4 */
 287:Src/main.c    **** 
 288:Src/main.c    **** /**
 289:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 290:Src/main.c    ****   * @retval None
 291:Src/main.c    ****   */
 292:Src/main.c    **** void Error_Handler(void)
 293:Src/main.c    **** {
 302              		.loc 1 293 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 12


 306              		@ link register save eliminated.
 294:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 295:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 298:Src/main.c    **** }
 307              		.loc 1 298 1 view .LVU77
 308 0000 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE135:
 312              		.global	Ms_5_Flag
 313              		.global	Init_OK
 314              		.section	.bss.Init_OK,"aw",%nobits
 315              		.set	.LANCHOR0,. + 0
 318              	Init_OK:
 319 0000 00       		.space	1
 320              		.section	.bss.Ms_5_Flag,"aw",%nobits
 323              	Ms_5_Flag:
 324 0000 00       		.space	1
 325              		.text
 326              	.Letext0:
 327              		.file 2 "c:\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 328              		.file 3 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 329              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 330              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 331              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 332              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 333              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 334              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 335              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 336              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 337              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 338              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 339              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 340              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 341              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 342              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 343              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 344              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 345              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 346              		.file 21 "Inc/adc.h"
 347              		.file 22 "Inc/can.h"
 348              		.file 23 "Inc/spi.h"
 349              		.file 24 "Inc/tim.h"
 350              		.file 25 "Inc/usart.h"
 351              		.file 26 "Inc/usb_otg.h"
 352              		.file 27 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 353              		.file 28 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 354              		.file 29 "c:\\arm_gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 355              		.file 30 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 356              		.file 31 "c:\\arm_gcc\\arm-none-eabi\\include\\stdlib.h"
 357              		.file 32 "mylib/uart_ext.h"
 358              		.file 33 "Src/SVPWM.h"
 359              		.file 34 "mylib/pid.h"
 360              		.file 35 "Src/foc.h"
 361              		.file 36 "Inc/dac.h"
 362              		.file 37 "mylib/debug_utils.h"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 13


 363              		.file 38 "Inc/utils.h"
 364              		.file 39 "Inc/dma.h"
 365              		.file 40 "Inc/gpio.h"
 366              		.file 41 "Src/parameter.h"
 367              		.file 42 "mylib/as5047.h"
 368              		.file 43 "<built-in>"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:26     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:160    .text.SystemClock_Config:00000090 $d
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:166    .rodata.main.str1.4:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:173    .text.main:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:180    .text.main:00000000 main
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:282    .text.main:00000078 $d
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:293    .text.Error_Handler:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:300    .text.Error_Handler:00000000 Error_Handler
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:323    .bss.Ms_5_Flag:00000000 Ms_5_Flag
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:318    .bss.Init_OK:00000000 Init_OK
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:319    .bss.Init_OK:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccOFKZNO.s:324    .bss.Ms_5_Flag:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_DMA_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_DAC_Init
MX_TIM1_Init
MX_TIM8_Init
MX_UART5_Init
MX_TIM6_Init
MX_TIM7_Init
debug_uart_init
uprintf_polling
Read_Parameters
MX_SPI3_Init
As5047_Init
Foc_Init
UART_Command_Analize_And_Call
huart5
hspi3
buffer_rx_OK
